{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setCurrentSong","setSongs","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","size","icon","faAngleLeft","onClick","faPause","faPlay","pause","faAngleRight","Song","isDarkModeActive","alt","name","src","cover","artist","LibrarySong","songSelectHandler","Library","isLibraryActive","sortedyArtist","sort","b","sortedByTitle","Nav","setIsLibraryActive","setIsDarkModeActive","faBolt","faEyeSlash","faEye","faSun","faMoon","chillHop","audio","uuidv4","App","useState","data","useRef","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dca6e21.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  //UseEffects\r\n  useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n  }, [currentSong]);\r\n  //Event handlers\r\n  const playSongHandler = () => {\r\n    // console.log(audioRef);\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n    if (direction === \"forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  // Styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player-container\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n          onClick={() => skipTrackHandler(\"back\")}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n          onClick={playSongHandler}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n          onClick={() => skipTrackHandler(\"forward\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong, isPlaying, isDarkModeActive }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img\r\n        alt={currentSong.name}\r\n        className={`${isPlaying ? \"rotate\" : \"\"}`}\r\n        src={currentSong.cover}\r\n      ></img>\r\n      <h2 className={`${isDarkModeActive ? \"dark-icon-font\" : \"\"}`}>\r\n        {currentSong.name}\r\n      </h2>\r\n      <h3 className={`${isDarkModeActive ? \"dark-icon-font\" : \"\"}`}>\r\n        {currentSong.artist}\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setSongs,\r\n  isDarkModeActive,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    await setCurrentSong(song);\r\n\r\n    // Change selected song to active\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n    if (isPlaying) audioRef.current.play();\r\n    if (!isPlaying) {\r\n      setIsPlaying(!isPlaying);\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n      onClick={songSelectHandler}\r\n    >\r\n      <img alt={song.name} src={song.cover}></img>\r\n      <div className=\"song-description\">\r\n        <h3 className={`${isDarkModeActive ? \"dark-icon-font\" : \"\"}`}>\r\n          {song.name}\r\n        </h3>\r\n        <h4 className={`${isDarkModeActive ? \"dark-icon-font\" : \"\"}`}>\r\n          {song.artist}\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setSongs,\r\n  isLibraryActive,\r\n  isDarkModeActive,\r\n}) => {\r\n  // Handlers\r\n  const sortByArtistHandler = () => {\r\n    const songCopy = songs.map((song) => song);\r\n    const sortedyArtist = songCopy.sort((a, b) =>\r\n      a.artist > b.artist ? 1 : -1\r\n    );\r\n    setSongs(sortedyArtist);\r\n  };\r\n\r\n  const sortByTitleHandler = () => {\r\n    const songCopy = songs.map((song) => song);\r\n    const sortedByTitle = songCopy.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n    setSongs(sortedByTitle);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`library ${isLibraryActive ? \"active-library\" : \"\"} ${\r\n        isDarkModeActive ? \"dark\" : \"\"\r\n      }`}\r\n    >\r\n      <h2 className={`${isDarkModeActive ? \"dark-icon-font\" : \"\"}`}>Library</h2>\r\n      <div className=\"sort-by-container\">\r\n        <h3 className=\"sort-by\">Sort by</h3>\r\n        <hr />\r\n      </div>\r\n      <div className=\"sort-by-button-container\">\r\n        <button onClick={sortByArtistHandler}>Artist</button>\r\n        <button onClick={sortByTitleHandler}>Title</button>\r\n      </div>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setIsPlaying={setIsPlaying}\r\n            setSongs={setSongs}\r\n            isDarkModeActive={isDarkModeActive}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMoon } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSun } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faBolt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({\r\n  isLibraryActive,\r\n  setIsLibraryActive,\r\n  isDarkModeActive,\r\n  setIsDarkModeActive,\r\n}) => {\r\n  return (\r\n    <nav>\r\n      <div\r\n        className={`nav-icon ${isDarkModeActive ? \"nav-icon-dark\" : \"\"} ${\r\n          isLibraryActive ? \"active-nav-icon\" : \"\"\r\n        }`}\r\n      >\r\n        <h1\r\n        // className={`${isDarkModeActive ? \"dark-icon-font\" : \"\"}`}\r\n        >\r\n          Bolt\r\n        </h1>\r\n        <FontAwesomeIcon icon={faBolt} />\r\n      </div>\r\n      <div className=\"nav-buttons\">\r\n        <button\r\n          className={`${isDarkModeActive ? \"dark-hover\" : \"light-hover\"}`}\r\n          onClick={() => setIsLibraryActive(!isLibraryActive)}\r\n        >\r\n          Library\r\n          {/* <FontAwesomeIcon icon={faMusic} /> */}\r\n          <FontAwesomeIcon icon={isLibraryActive ? faEyeSlash : faEye} />\r\n        </button>\r\n        <button\r\n          className={`${isDarkModeActive ? \"dark-hover\" : \"light-hover\"}`}\r\n          onClick={() => setIsDarkModeActive(!isDarkModeActive)}\r\n        >\r\n          Dark mode\r\n          <FontAwesomeIcon icon={isDarkModeActive ? faSun : faMoon} />\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Mirage\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\r\n      artist: \"Nymano, j'san\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#554f80\", \"#E0938E\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10136\",\r\n    },\r\n    {\r\n      name: \"Faces\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/c50f86fb7696e5c5747e0fa2ada4fcbc2501fea7-1024x1024.jpg\",\r\n      artist: \"Knowmadic\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#C5F6D4\", \"#F7FDCF\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8554\",\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef, useEffect } from \"react\";\n// Styles\nimport \"./styles/app.scss\";\n// Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n// Song data\nimport data from \"./data\";\n\nfunction App() {\n  // State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [isLibraryActive, setIsLibraryActive] = useState(false);\n  const [isDarkModeActive, setIsDarkModeActive] = useState(false);\n  // Refs\n  const audioRef = useRef(null);\n\n  //UseEffect\n  useEffect(() => {\n    setIsLibraryActive(true);\n  }, []);\n\n  // Handlers\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div\n      className={`App ${isLibraryActive ? \"library-active\" : \"\"} ${\n        isDarkModeActive ? \"dark\" : \"\"\n      }`}\n    >\n      <Nav\n        isLibraryActive={isLibraryActive}\n        setIsLibraryActive={setIsLibraryActive}\n        isDarkModeActive={isDarkModeActive}\n        setIsDarkModeActive={setIsDarkModeActive}\n      />\n      <Song\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        isDarkModeActive={isDarkModeActive}\n      />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n        isLibraryActive={isLibraryActive}\n        isDarkModeActive={isDarkModeActive}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}